12/89
2/46
10/43
66/85
65/81
View(loan50)
loan50 <- read.csv("https://www.openintro.org/stat/data/csv/loan50.csv")
View(loan50)
?loan50
??loan50
install.packages("shiny")
install github("StatsWithR/statsr")
install_github("StatsWithR/statsr", force =TRUE)
install github("StatsWithR/statsr", force =TRUE)
library(devtools)
install_github("StatsWithR/statsr")
library("tidyverse")
library("shiny")
data(rbuthnot)
library(dplyr)
library(ggplot2)
library(statsr)
data(rbuthnot)
data(arbuthnot)
arbuthnot
tail(arbuthnot)
View(arbuthnot)
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
arbuthnot$total
ggplot(arbuthnot)+
mapping= aes(x = total, y = years)
ggplot(data = arbuthnot, aes(x = year, y = ottal))+
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = total))+
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(boyprop = boys / total)
ggplot(data = arbuthot, aes(x = year, y = boyprop))+
geom_line()
ggplot(data = arbuthnot, aes(x = year, y = boyprop))+
geom_line()
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
data(present)
data(present)
force(present)
View(present)
devtools::install_github('rstudio/rmarkdown')
# type your code for Question 6 here, and Knit
present <- present %>%
mutate(more_boys = boys > girls)
ggplot(data = present, aes(x = year, y = more_boys))+
geom_line()
View(arbuthnot)
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys / girls) %>%
ggplot(data = present, aes(x = year, y = more_boys))+
geom_line()
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys / girls) %>%
ggplot(data = present, aes(x = year, y = more_boys))+
geom_line()
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys / girls)
ggplot(data = present, aes(x = year, y = more_boys))+
geom_line()
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys / girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl))+
geom_line()
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
#present %>%
#  mutate(total = ?) %>%
#  arrange(desc(total))
present %>%
arrange(desc(total))
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
#present %>%
#  mutate(total = ?) %>%
#  arrange(desc(total))
present %>%
mutate(total = boys + girls) %>%
arrange(desc(total))
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
force(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = mycflights, aes(x = dep_delay))+
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay))+
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dest_delay))+
geom_histogram()
ggplot(data = rdu_flights, aes(x = dep_delay))+
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(rdu_flights), sd_dd = sd(rdu_flights), n = n())
str(rdu_flights)
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nyc_flights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(data = sfo_feb_flights, aes(x = dep_delay))+
geom_histogram(())
ggplot(data = sfo_feb_flights, aes(x = dep_delay))+
geom_histogram()
str(sfo_feb_flights)
?summarise
# type your code for Question 4 here, and Knit
"July"
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median(dep_delay))
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
View(nycflights)
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
?nycflights
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance))+
geom_point()
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
68
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay))+
geom_histogram()
sfo_feb_flights %>%
summarise(median(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median(arr_delay), sd(arr_delay))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 4 here, and Knit
"July"
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 7 here, and Knit
"LGA"
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
# type your code for Question 8 here, and Knit
nycflights %>%
nycflights <- mutate(avg_speed = (distance / (air_time / 60))) %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
68
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay))+
geom_histogram()
sfo_feb_flights %>%
summarise(median(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median(arr_delay), sd(arr_delay))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 4 here, and Knit
"July"
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 7 here, and Knit
"LGA"
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = (distance / (air_time / 60))) %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
# type your code for Question 9 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = (distance / (air_time / 60)))
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = (distance / (air_time / 60))) %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
?nycflights
nycflights$distance
names(nycflights)
View(nycflights)
data(nycflights)
force(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
68
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay))+
geom_histogram()
sfo_feb_flights %>%
summarise(median(arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median(arr_delay), sd(arr_delay))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 4 here, and Knit
"July"
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 7 here, and Knit
"LGA"
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = (distance / (air_time / 60))) %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance))+
geom_point()
View(nycflights)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
View(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
View(kobe_basket)
?calc_streak()
kobe_streak <- calc_streak(kobe_basket$shot)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
summarise(kobe_streak, IQR(), median(), max(), min())
?summarise
kobe_streak %>%
summarise(median(length), IQR(length), min(length), max(length()))
summary(length())
kobe_streak %>%
summarise(median(length), IQR(length), min(length), max(length))
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(coin_outcomes, size = 100, replace = TRUE)
View(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE, prob = c(.2, .8))
sim_unfair_coin
table(sim_unfair_coin)
?sample
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
# type your code for the Exercise here, and Knit
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(.45))
